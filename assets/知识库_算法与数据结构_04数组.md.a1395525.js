import{_ as p,r as e,c as o,b as l,a,d as n,e as s,o as c}from"./app.0b1f5e83.js";const N='{"title":"\u6570\u7EC4","description":"","frontmatter":{"published":true,"date":"2022-1-22","tags":"\u7B97\u6CD5\u4E0E\u6570\u636E\u7ED3\u6784"},"headers":[{"level":2,"title":"\u6570\u7EC4","slug":"\u6570\u7EC4-1"},{"level":3,"title":"\u7279\u70B9\uFF1A","slug":"\u7279\u70B9\uFF1A"},{"level":3,"title":"\u6570\u7EC4\u8FD0\u7B97\uFF1A","slug":"\u6570\u7EC4\u8FD0\u7B97\uFF1A"},{"level":3,"title":"\u6570\u7EC4\u987A\u5E8F\u5B58\u50A8\uFF1A","slug":"\u6570\u7EC4\u987A\u5E8F\u5B58\u50A8\uFF1A"},{"level":2,"title":"\u7279\u6B8A\u77E9\u9635","slug":"\u7279\u6B8A\u77E9\u9635"},{"level":3,"title":"\u5BF9\u79F0\u77E9\u9635","slug":"\u5BF9\u79F0\u77E9\u9635"},{"level":3,"title":"\u4E09\u89D2\u77E9\u9635","slug":"\u4E09\u89D2\u77E9\u9635"},{"level":3,"title":"\u4E09\u5BF9\u89D2\u77E9\u9635","slug":"\u4E09\u5BF9\u89D2\u77E9\u9635"},{"level":2,"title":"\u7A00\u758F\u77E9\u9635","slug":"\u7A00\u758F\u77E9\u9635"},{"level":3,"title":"\u5B9A\u4E49","slug":"\u5B9A\u4E49"},{"level":3,"title":"\u538B\u7F29\u5B58\u50A8","slug":"\u538B\u7F29\u5B58\u50A8"},{"level":3,"title":"\u5FEB\u901F\u8F6C\u7F6E","slug":"\u5FEB\u901F\u8F6C\u7F6E"},{"level":2,"title":"\u5341\u5B57\u94FE\u8868","slug":"\u5341\u5B57\u94FE\u8868"}],"relativePath":"\u77E5\u8BC6\u5E93/\u7B97\u6CD5\u4E0E\u6570\u636E\u7ED3\u6784/04\u6570\u7EC4.md","lastUpdated":1642856876859}',u={},i=a('<h1 id="\u6570\u7EC4" tabindex="-1">\u6570\u7EC4 <a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a></h1><blockquote><p>\u672C\u7AE0\u4E3B\u8981\u4ECB\u7ECD\u6570\u7EC4\u57FA\u672C\u6982\u5FF5\u53CA\u5176\u6269\u5C55\uFF0C\u4E8C\u7EF4\u6570\u7EC4\u7684\u7279\u6B8A\u77E9\u9635\uFF1A\u5BF9\u79F0\u77E9\u9635\u3001\u4E09\u89D2\u77E9\u9635\u3001\u7A00\u758F\u77E9\u9635\u3001\u5341\u5B57\u94FE\u8868\u7B49\u5B58\u50A8\u89E3\u8026\uFF1B\u7136\u540E\u4ECB\u7ECD\u5E76\u5B9E\u73B0\u4E86\u7A00\u758F\u77E9\u9635\u7684\u5FEB\u901F\u8F6C\u7F6E\u7B97\u6CD5\u3002</p><p>\u53EF\u4EE5\u8F6C\u8F7D\uFF0C\u4F46\u8BF7\u58F0\u660E\u6E90\u94FE\u63A5\uFF1A\u6587\u7AE0\u6E90\u94FE\u63A5<a href="https://justin3go.com" target="_blank" rel="noopener noreferrer">justin3go.com</a>(\u6709\u4E9Blatex\u516C\u5F0F\u67D0\u4E9B\u5E73\u53F0\u4E0D\u80FD\u6E32\u67D3\u53EF\u67E5\u770B\u8FD9\u4E2A\u7F51\u7AD9)</p></blockquote><h2 id="\u6570\u7EC4-1" tabindex="-1">\u6570\u7EC4 <a class="header-anchor" href="#\u6570\u7EC4-1" aria-hidden="true">#</a></h2><h3 id="\u7279\u70B9\uFF1A" tabindex="-1">\u7279\u70B9\uFF1A <a class="header-anchor" href="#\u7279\u70B9\uFF1A" aria-hidden="true">#</a></h3><ul><li>\u7ED3\u6784\u56FA\u5B9A</li><li>\u6BCF\u4E00\u4E2A\u7EF4\u5EA6\u4E0A\u7684\u5143\u7D20\u540C\u6784</li></ul><h3 id="\u6570\u7EC4\u8FD0\u7B97\uFF1A" tabindex="-1">\u6570\u7EC4\u8FD0\u7B97\uFF1A <a class="header-anchor" href="#\u6570\u7EC4\u8FD0\u7B97\uFF1A" aria-hidden="true">#</a></h3><ul><li>\u7ED9\u5B9A\u4F4D\u7F6E\uFF0C\u5B58\u53D6\u76F8\u5E94\u6570\u636E\u5143\u7D20\u3002</li><li>\u7ED9\u5B9A\u4F4D\u7F6E\uFF0C\u4FEE\u6539\u6570\u636E\u5143\u7D20\u7684\u503C\u3002</li><li>\u6570\u7EC4\u4E00\u822C\u4E0D\u505A\u6DFB\u52A0\u6216\u5220\u9664\u64CD\u4F5C\u3002</li></ul><h3 id="\u6570\u7EC4\u987A\u5E8F\u5B58\u50A8\uFF1A" tabindex="-1">\u6570\u7EC4\u987A\u5E8F\u5B58\u50A8\uFF1A <a class="header-anchor" href="#\u6570\u7EC4\u987A\u5E8F\u5B58\u50A8\uFF1A" aria-hidden="true">#</a></h3><ul><li>\u4EE5\u884C\u5E8F\u4E3A\u4E3B\u5E8F\u3002</li></ul>',9),r=n("p",null,[n("span",{class:"katex-display"},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"L"),n("mi",null,"o"),n("mi",null,"c"),n("mo",null,"("),n("msub",null,[n("mi",null,"a"),n("mrow",null,[n("mi",null,"i"),n("mi",null,"j")])]),n("mo",null,")"),n("mo",null,"="),n("mi",null,"L"),n("mi",null,"o"),n("mi",null,"c"),n("mo",null,"("),n("msub",null,[n("mi",null,"a"),n("mrow",null,[n("mn",null,"0"),n("mn",null,"0")])]),n("mo",null,")"),n("mo",null,"+"),n("mo",null,"("),n("mi",null,"i"),n("mo",null,"\xD7"),n("mi",null,"n"),n("mo",null,"+"),n("mi",null,"j"),n("mo",null,")"),n("mo",null,"\xD7"),n("mi",null,"L")]),n("annotation",{encoding:"application/x-tex"},"Loc(a_{ij}) = Loc(a_{00}) + (i\\times n + j)\\times L ")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"strut",style:{height:"0.75em"}}),n("span",{class:"strut bottom",style:{height:"1.036108em","vertical-align":"-0.286108em"}}),n("span",{class:"base displaystyle textstyle uncramped"},[n("span",{class:"mord mathit"},"L"),n("span",{class:"mord mathit"},"o"),n("span",{class:"mord mathit"},"c"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},[n("span",{class:"mord mathit"},"a"),n("span",{class:"vlist"},[n("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"reset-textstyle scriptstyle cramped"},[n("span",{class:"mord scriptstyle cramped"},[n("span",{class:"mord mathit"},"i"),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j")])])]),n("span",{class:"baseline-fix"},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),s("\u200B")])])]),n("span",{class:"mclose"},")"),n("span",{class:"mrel"},"="),n("span",{class:"mord mathit"},"L"),n("span",{class:"mord mathit"},"o"),n("span",{class:"mord mathit"},"c"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},[n("span",{class:"mord mathit"},"a"),n("span",{class:"vlist"},[n("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"reset-textstyle scriptstyle cramped"},[n("span",{class:"mord scriptstyle cramped"},[n("span",{class:"mord mathrm"},"0"),n("span",{class:"mord mathrm"},"0")])])]),n("span",{class:"baseline-fix"},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),s("\u200B")])])]),n("span",{class:"mclose"},")"),n("span",{class:"mbin"},"+"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathit"},"i"),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mord mathit"},"n"),n("span",{class:"mbin"},"+"),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),n("span",{class:"mclose"},")"),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mord mathit"},"L")])])])])],-1),k=n("ul",null,[n("li",null,"\u4EE5\u5217\u5E8F\u4E3A\u4E3B\u5E8F\u3002")],-1),m=n("p",null,[n("span",{class:"katex-display"},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"L"),n("mi",null,"o"),n("mi",null,"c"),n("mo",null,"("),n("msub",null,[n("mi",null,"a"),n("mrow",null,[n("mi",null,"i"),n("mi",null,"j")])]),n("mo",null,")"),n("mo",null,"="),n("mi",null,"L"),n("mi",null,"o"),n("mi",null,"c"),n("mo",null,"("),n("msub",null,[n("mi",null,"a"),n("mrow",null,[n("mn",null,"0"),n("mn",null,"0")])]),n("mo",null,")"),n("mo",null,"+"),n("mo",null,"("),n("mi",null,"j"),n("mo",null,"\xD7"),n("mi",null,"m"),n("mo",null,"+"),n("mi",null,"i"),n("mo",null,")"),n("mo",null,"\xD7"),n("mi",null,"L")]),n("annotation",{encoding:"application/x-tex"},"Loc(a_{ij}) = Loc(a_{00}) + (j\\times m + i)\\times L ")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"strut",style:{height:"0.75em"}}),n("span",{class:"strut bottom",style:{height:"1.036108em","vertical-align":"-0.286108em"}}),n("span",{class:"base displaystyle textstyle uncramped"},[n("span",{class:"mord mathit"},"L"),n("span",{class:"mord mathit"},"o"),n("span",{class:"mord mathit"},"c"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},[n("span",{class:"mord mathit"},"a"),n("span",{class:"vlist"},[n("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"reset-textstyle scriptstyle cramped"},[n("span",{class:"mord scriptstyle cramped"},[n("span",{class:"mord mathit"},"i"),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j")])])]),n("span",{class:"baseline-fix"},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),s("\u200B")])])]),n("span",{class:"mclose"},")"),n("span",{class:"mrel"},"="),n("span",{class:"mord mathit"},"L"),n("span",{class:"mord mathit"},"o"),n("span",{class:"mord mathit"},"c"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},[n("span",{class:"mord mathit"},"a"),n("span",{class:"vlist"},[n("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"reset-textstyle scriptstyle cramped"},[n("span",{class:"mord scriptstyle cramped"},[n("span",{class:"mord mathrm"},"0"),n("span",{class:"mord mathrm"},"0")])])]),n("span",{class:"baseline-fix"},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),s("\u200B")])])]),n("span",{class:"mclose"},")"),n("span",{class:"mbin"},"+"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mord mathit"},"m"),n("span",{class:"mbin"},"+"),n("span",{class:"mord mathit"},"i"),n("span",{class:"mclose"},")"),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mord mathit"},"L")])])])])],-1),d=n("h2",{id:"\u7279\u6B8A\u77E9\u9635",tabindex:"-1"},[s("\u7279\u6B8A\u77E9\u9635 "),n("a",{class:"header-anchor",href:"#\u7279\u6B8A\u77E9\u9635","aria-hidden":"true"},"#")],-1),h=n("h3",{id:"\u5BF9\u79F0\u77E9\u9635",tabindex:"-1"},[s("\u5BF9\u79F0\u77E9\u9635 "),n("a",{class:"header-anchor",href:"#\u5BF9\u79F0\u77E9\u9635","aria-hidden":"true"},"#")],-1),y=n("p",null,[n("span",{class:"katex-display"},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"n"),n("mo",null,"="),n("mrow",null,[n("mo",{fence:"true"},"{"),n("mtable",null,[n("mtr",null,[n("mtd",null,[n("mrow")]),n("mtd",null,[n("mrow",null,[n("mtext",null,[n("mi",{mathvariant:"normal"},"i")]),n("mo",null,"("),n("mi",null,"i"),n("mo",null,"+"),n("mn",null,"1"),n("mo",null,")"),n("mi",{mathvariant:"normal"},"/"),n("mn",null,"2"),n("mo",null,"+"),n("mi",null,"j"),n("mo",{separator:"true"},","),n("mi",null,"i"),n("mo",null,">"),n("mo",null,"="),n("mi",null,"j")])])]),n("mtr",null,[n("mtd",null,[n("mrow")]),n("mtd",null,[n("mrow",null,[n("mtext",null,[n("mi",{mathvariant:"normal"},"j")]),n("mo",null,"("),n("mi",null,"j"),n("mo",null,"+"),n("mn",null,"1"),n("mo",null,")"),n("mi",{mathvariant:"normal"},"/"),n("mn",null,"2"),n("mo",null,"+"),n("mi",null,"i"),n("mo",{separator:"true"},","),n("mi",null,"i"),n("mo",null,"<"),n("mi",null,"j")])])])])])]),n("annotation",{encoding:"application/x-tex"},"n = \\begin{cases} & \\text i(i+1)/2+j, i>=j \\\\ & \\text j(j+1)/2+i, i<j \\end{cases} ")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"strut",style:{height:"1.75em"}}),n("span",{class:"strut bottom",style:{height:"3.0000299999999998em","vertical-align":"-1.25003em"}}),n("span",{class:"base displaystyle textstyle uncramped"},[n("span",{class:"mord mathit"},"n"),n("span",{class:"mrel"},"="),n("span",{class:"minner displaystyle textstyle uncramped"},[n("span",{class:"style-wrap reset-textstyle textstyle uncramped",style:{top:"0em"}},[n("span",{class:"delimsizing size4"},"{")]),n("span",{class:"mord"},[n("span",{class:"mtable"},[n("span",{class:"col-align-l"},[n("span",{class:"vlist"},[n("span",{style:{top:"-0.6819999999999999em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"mord displaystyle textstyle uncramped"})]),n("span",{style:{top:"0.7579999999999999em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"mord displaystyle textstyle uncramped"})]),n("span",{class:"baseline-fix"},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),s("\u200B")])])]),n("span",{class:"arraycolsep",style:{width:"1em"}}),n("span",{class:"col-align-l"},[n("span",{class:"vlist"},[n("span",{style:{top:"-0.6819999999999999em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"mord displaystyle textstyle uncramped"},[n("span",{class:"text mord displaystyle textstyle uncramped"},[n("span",{class:"mord mathrm"},"i")]),n("span",{class:"mopen"},"("),n("span",{class:"mord mathit"},"i"),n("span",{class:"mbin"},"+"),n("span",{class:"mord mathrm"},"1"),n("span",{class:"mclose"},")"),n("span",{class:"mord mathrm"},"/"),n("span",{class:"mord mathrm"},"2"),n("span",{class:"mbin"},"+"),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),n("span",{class:"mpunct"},","),n("span",{class:"mord mathit"},"i"),n("span",{class:"mrel"},">"),n("span",{class:"mrel"},"="),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j")])]),n("span",{style:{top:"0.7579999999999999em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"mord displaystyle textstyle uncramped"},[n("span",{class:"text mord displaystyle textstyle uncramped"},[n("span",{class:"mord mathrm"},"j")]),n("span",{class:"mopen"},"("),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),n("span",{class:"mbin"},"+"),n("span",{class:"mord mathrm"},"1"),n("span",{class:"mclose"},")"),n("span",{class:"mord mathrm"},"/"),n("span",{class:"mord mathrm"},"2"),n("span",{class:"mbin"},"+"),n("span",{class:"mord mathit"},"i"),n("span",{class:"mpunct"},","),n("span",{class:"mord mathit"},"i"),n("span",{class:"mrel"},"<"),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j")])]),n("span",{class:"baseline-fix"},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),s("\u200B")])])])])]),n("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})])])])])])],-1),b=n("img",{src:"https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20210607214501215.png",alt:"image-20210607214501215",style:{zoom:"67%"}},null,-1),g=n("h3",{id:"\u4E09\u89D2\u77E9\u9635",tabindex:"-1"},[s("\u4E09\u89D2\u77E9\u9635 "),n("a",{class:"header-anchor",href:"#\u4E09\u89D2\u77E9\u9635","aria-hidden":"true"},"#")],-1),f=n("img",{src:"https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20210607214526959.png",alt:"image-20210607214526959",style:{zoom:"67%"}},null,-1),z=n("p",null,[n("span",{class:"katex-display"},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"n"),n("mo",null,"="),n("mrow",null,[n("mo",{fence:"true"},"{"),n("mtable",null,[n("mtr",null,[n("mtd",null,[n("mrow")]),n("mtd",null,[n("mrow",null,[n("mtext",null,[n("mi",{mathvariant:"normal"},"i")]),n("mo",null,"("),n("mi",null,"i"),n("mo",null,"+"),n("mn",null,"1"),n("mo",null,")"),n("mi",{mathvariant:"normal"},"/"),n("mn",null,"2"),n("mo",null,"+"),n("mi",null,"j"),n("mo",{separator:"true"},","),n("mi",null,"i"),n("mo",null,">"),n("mo",null,"="),n("mi",null,"j")])])]),n("mtr",null,[n("mtd",null,[n("mrow")]),n("mtd",null,[n("mrow",null,[n("mtext",null,[n("mi",{mathvariant:"normal"},"n")]),n("mo",null,"("),n("mi",null,"n"),n("mo",null,"+"),n("mn",null,"1"),n("mo",null,")"),n("mn",null,"2"),n("mo",{separator:"true"},","),n("mi",null,"i"),n("mo",null,"<"),n("mi",null,"j")])])])])])]),n("annotation",{encoding:"application/x-tex"},"n = \\begin{cases} & \\text i(i+1)/2 + j, i>=j \\\\ & \\text n(n+1)2, i<j \\end{cases} ")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"strut",style:{height:"1.75em"}}),n("span",{class:"strut bottom",style:{height:"3.0000299999999998em","vertical-align":"-1.25003em"}}),n("span",{class:"base displaystyle textstyle uncramped"},[n("span",{class:"mord mathit"},"n"),n("span",{class:"mrel"},"="),n("span",{class:"minner displaystyle textstyle uncramped"},[n("span",{class:"style-wrap reset-textstyle textstyle uncramped",style:{top:"0em"}},[n("span",{class:"delimsizing size4"},"{")]),n("span",{class:"mord"},[n("span",{class:"mtable"},[n("span",{class:"col-align-l"},[n("span",{class:"vlist"},[n("span",{style:{top:"-0.6819999999999999em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"mord displaystyle textstyle uncramped"})]),n("span",{style:{top:"0.7579999999999999em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"mord displaystyle textstyle uncramped"})]),n("span",{class:"baseline-fix"},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),s("\u200B")])])]),n("span",{class:"arraycolsep",style:{width:"1em"}}),n("span",{class:"col-align-l"},[n("span",{class:"vlist"},[n("span",{style:{top:"-0.6819999999999999em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"mord displaystyle textstyle uncramped"},[n("span",{class:"text mord displaystyle textstyle uncramped"},[n("span",{class:"mord mathrm"},"i")]),n("span",{class:"mopen"},"("),n("span",{class:"mord mathit"},"i"),n("span",{class:"mbin"},"+"),n("span",{class:"mord mathrm"},"1"),n("span",{class:"mclose"},")"),n("span",{class:"mord mathrm"},"/"),n("span",{class:"mord mathrm"},"2"),n("span",{class:"mbin"},"+"),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),n("span",{class:"mpunct"},","),n("span",{class:"mord mathit"},"i"),n("span",{class:"mrel"},">"),n("span",{class:"mrel"},"="),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j")])]),n("span",{style:{top:"0.7579999999999999em"}},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),n("span",{class:"mord displaystyle textstyle uncramped"},[n("span",{class:"text mord displaystyle textstyle uncramped"},[n("span",{class:"mord mathrm"},"n")]),n("span",{class:"mopen"},"("),n("span",{class:"mord mathit"},"n"),n("span",{class:"mbin"},"+"),n("span",{class:"mord mathrm"},"1"),n("span",{class:"mclose"},")"),n("span",{class:"mord mathrm"},"2"),n("span",{class:"mpunct"},","),n("span",{class:"mord mathit"},"i"),n("span",{class:"mrel"},"<"),n("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j")])]),n("span",{class:"baseline-fix"},[n("span",{class:"fontsize-ensurer reset-size5 size5"},[n("span",{style:{"font-size":"0em"}},"\u200B")]),s("\u200B")])])])])]),n("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})])])])])])],-1),w=a(`<h3 id="\u4E09\u5BF9\u89D2\u77E9\u9635" tabindex="-1">\u4E09\u5BF9\u89D2\u77E9\u9635 <a class="header-anchor" href="#\u4E09\u5BF9\u89D2\u77E9\u9635" aria-hidden="true">#</a></h3><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20210607214713166.png" alt="image-20210607214713166" style="zoom:67%;"><p>\uFF08\u6309\u884C\u4E3B\u5E8F\u4E3A\u4F8B\uFF09</p><ul><li>\u603B\u957F\u5EA6\uFF1A3n-2</li><li>\u5DF2\u77E5<strong>k(0&lt;=k&lt;=3n-3)</strong></li><li><strong>i = (k+1)/3</strong></li><li><strong>j = (k+1)%3+i-1</strong></li></ul><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20210607215023729.png" alt="image-20210607215023729" style="zoom:50%;"><h2 id="\u7A00\u758F\u77E9\u9635" tabindex="-1">\u7A00\u758F\u77E9\u9635 <a class="header-anchor" href="#\u7A00\u758F\u77E9\u9635" aria-hidden="true">#</a></h2><h3 id="\u5B9A\u4E49" tabindex="-1">\u5B9A\u4E49 <a class="header-anchor" href="#\u5B9A\u4E49" aria-hidden="true">#</a></h3><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20210607215112603.png" alt="image-20210607215112603" style="zoom:50%;"><ul><li>\u975E\u96F6\u5143\u4E2A\u6570&lt;&lt;\u96F6\u5143\u4E2A\u6570</li><li>\u5206\u5E03\u6CA1\u6709\u89C4\u5F8B</li><li>\u5BF9\u77E9\u9635M\uFF1A <ul><li>density = M\u4E2D\u975E\u96F6\u5143\u603B\u6570/M\u7684\u5143\u7D20\u603B\u6570\u3002</li><li>density&lt;=5%\u65F6\uFF0C\u5219\u79F0M\u4E3A\u7A00\u758F\u77E9\u9635\u3002</li><li>density\u79F0\u4E3AM\u7684\u7A20\u5BC6\u5EA6\u3002</li></ul></li></ul><h3 id="\u538B\u7F29\u5B58\u50A8" tabindex="-1">\u538B\u7F29\u5B58\u50A8 <a class="header-anchor" href="#\u538B\u7F29\u5B58\u50A8" aria-hidden="true">#</a></h3><ul><li>\u4E09\u5143\u7EC4\u6CD5</li><li>\u5B58\u50A8\u975E\u96F6\u5143\u7684\u884C\u3001\u5217\u4E0B\u6807\u53CA\u5176\u503C\u3002</li><li>\u5B58\u50A8\u77E9\u9635\u7684\u884C\u3001\u5217\u7EF4\u6570\u3002</li><li>\u4E09\u5143\u7EC4\uFF1A{0\uFF0C1\uFF0C12}\uFF0C{0\uFF0C2\uFF0C9}\uFF0C{3\uFF0C1\uFF0C-3}\xB7\xB7\xB7\xB7\xB7\xB7</li><li>\u884C\u5217\u5F0F\u7EF4\u6570\uFF1A\uFF086\uFF0C7\uFF09</li><li>\u975E\u96F6\u5143\u4E2A\u6570\uFF1A8</li></ul><table><thead><tr><th>0</th><th>6</th><th>7</th><th>8</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>2</td><td>12</td></tr><tr><td>2</td><td>1</td><td>3</td><td>9</td></tr><tr><td>3</td><td>3</td><td>1</td><td>-3</td></tr><tr><td>4</td><td>3</td><td>6</td><td>14</td></tr><tr><td>5</td><td>4</td><td>3</td><td>24</td></tr><tr><td>6</td><td>5</td><td>2</td><td>18</td></tr><tr><td>7</td><td>6</td><td>1</td><td>15</td></tr><tr><td>8</td><td>6</td><td>4</td><td>-7</td></tr></tbody></table><h3 id="\u5FEB\u901F\u8F6C\u7F6E" tabindex="-1">\u5FEB\u901F\u8F6C\u7F6E <a class="header-anchor" href="#\u5FEB\u901F\u8F6C\u7F6E" aria-hidden="true">#</a></h3><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20210607220203000.png" alt="image-20210607220203000" style="zoom:67%;"><p>\u4E00\u822C\u7684\u77E9\u9635\u8F6C\u7F6E:</p><div class="language-cpp"><pre><code><span class="token keyword">for</span><span class="token punctuation">(</span>col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> col <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> col<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> row <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        n<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">[</span>row<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AT(n) = O(mxn)</span>
</code></pre></div><p><strong>\u5FEB\u901F\u8F6C\u7F6E\uFF1A</strong></p><ul><li>\u6309M\u4E2D\u4E09\u5143\u7EC4\u6B21\u5E8F\u8F6C\u7F6E\uFF0C\u8F6C\u7F6E\u7ED3\u679C\u653E\u5165N\u4E2D\u6070\u5F53\u4F4D\u7F6E\u3002</li><li>\u786E\u5B9AM\u4E2D\u6BCF\u4E00\u5217\u7B2C\u4E00\u4E2A\u975E\u96F6\u5143\u5728N\u4E2D\u4F4D\u7F6E\u3002 <ul><li>\u4E3A\u786E\u5B9A\u8FD9\u4E9B\u4F4D\u7F6E\uFF0C\u5E94\u5148\u8BA1\u7B97M\u4E2D\u6BCF\u4E00\u5217\u4E2D\u975E\u96F6\u5143\u4E2A\u6570\u3002</li></ul></li><li>\u8BBE\u4E24\u4E2A\u8F85\u52A9\u6570\u7EC4 <ul><li>num[col]\uFF1A\u8868\u793AM\u4E2D\u7B2Ccol\u5217\u4E2D\u975E\u96F6\u5143\u4E2A\u6570\u3002</li><li>cpot[col]\uFF1A\u6307\u793AM\u4E2D\u7B2Ccol\u5217\u7B2C\u4E00\u4E2A\u975E\u96F6\u5143\u5728N\u4E2D\u4F4D\u7F6E\u3002</li></ul></li><li>\u663E\u7136\u6709 <ul><li>cpot[1] = 1</li><li>cpot[col] = cpot[col-1] + num[col-1]; (2&lt;=col&lt;=M[0])</li></ul></li></ul><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20210607222131939.png" alt="image-20210607222131939" style="zoom:67%;"><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20220122204456346.png" alt="image-20220122204456346" style="zoom:80%;"><p>\u51C6\u5907\uFF1A</p><div class="language-cpp"><pre><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;vector&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstring&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> num<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u94FE\u5F0F\u5B58\u50A8\uFF1A</p><div class="language-cpp"><pre><code><span class="token keyword">struct</span> <span class="token class-name">elements</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> col<span class="token punctuation">;</span>
    <span class="token keyword">int</span> row<span class="token punctuation">;</span>
    <span class="token keyword">int</span> val<span class="token punctuation">;</span>
    elements<span class="token operator">*</span> next<span class="token punctuation">;</span>
    <span class="token function">elements</span><span class="token punctuation">(</span><span class="token keyword">int</span> col<span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span><span class="token operator">:</span>
    <span class="token function">col</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">row</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">val</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">//\u8FD9\u91CC\u5077\u70B9\u61D2\u5C31\u4E0D\u628A\u957F\u5EA6\u4F20\u8FDB\u6765\u4E86O(\u2229_\u2229),\u6570\u7EC4\u5B9A\u4E49\u7684\u5168\u5C40\u53D8\u91CF</span>
<span class="token keyword">void</span> <span class="token function">num2elements</span><span class="token punctuation">(</span>elements<span class="token operator">*</span> head<span class="token punctuation">)</span><span class="token punctuation">{</span>
    elements<span class="token operator">*</span> temp <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">elements</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                temp<span class="token operator">-&gt;</span>next <span class="token operator">=</span> head<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
                head<span class="token operator">-&gt;</span>next <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u987A\u5F0F\u5B58\u50A8\uFF1A</p><div class="language-cpp"><pre><code>vector<span class="token operator">&lt;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;&gt;</span> elements<span class="token punctuation">;</span>
vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> temp<span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">num2elements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u8F6C\u63623\u5143\u7EC4</span>
    temp<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    temp<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    temp<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    elements<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    temp<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                temp<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                temp<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                temp<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                elements<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
                temp<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8F6C\u7F6E\u64CD\u4F5C\uFF1A</p><div class="language-cpp"><pre><code><span class="token keyword">int</span> count<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> cpot<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> result<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//\u8F6C\u7F6E\u540E\u7684\u7ED3\u679C\uFF1B</span>

<span class="token keyword">void</span> <span class="token function">trans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//init count</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> elements<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        count<span class="token punctuation">[</span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//init cpot</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        cpot<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sum<span class="token punctuation">;</span>
        sum <span class="token operator">+=</span> count<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">14</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        index <span class="token operator">=</span> <span class="token operator">++</span>cpot<span class="token punctuation">[</span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        result<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        result<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        result<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u628A\u884C\u5217\u53CA\u975E\u96F6\u4E2A\u6570\u8FDB\u884C\u8D4B\u503C</span>
    result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> elements<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> elements<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> elements<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> T_num<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">print_result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>T_num<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>T_num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">14</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        T_num<span class="token punctuation">[</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> T_num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E3B\u51FD\u6570\uFF1A</p><div class="language-cpp"><pre><code><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//elements* head = new elements(5, 5, 13);</span>
    <span class="token comment">//num2elements(head);</span>
    <span class="token function">num2elements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> elements<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;*************************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token function">trans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">14</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;*************************&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token function">print_result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7ED3\u679C\uFF1A</p><div class="language-cpp"><pre><code><span class="token comment">/*
5, 5, 13, 
0, 0, 1,
0, 1, 1,
0, 2, 1,
0, 3, 1,
0, 4, 1,
1, 3, 1,
2, 2, 1,
3, 1, 1,
4, 0, 1,
4, 1, 1,
4, 2, 1,
4, 3, 1,
4, 4, 1, 
*************************
5, 5, 13,
0, 0, 1,
0, 4, 1,
1, 0, 1,
1, 3, 1,
1, 4, 1,
2, 0, 1,
2, 2, 1,
2, 4, 1,
3, 0, 1,
3, 1, 1,
3, 4, 1,
4, 0, 1,
4, 4, 1,
*/</span>
</code></pre></div><h2 id="\u5341\u5B57\u94FE\u8868" tabindex="-1">\u5341\u5B57\u94FE\u8868 <a class="header-anchor" href="#\u5341\u5B57\u94FE\u8868" aria-hidden="true">#</a></h2><p>\u539F\u56E0\uFF1A\u4E09\u5143\u7EC4\u8868\u5143\u7D20\u79FB\u52A8</p><ul><li>\u5BF9\u987A\u5E8F\u5B58\u50A8\u7684\u4E09\u5143\u7EC4\u8868\uFF0C\u79FB\u52A8\u5143\u7D20\u7684\u65F6\u95F4\u5F00\u9500\u5927</li><li>\u4E3A\u7EF4\u62A4\u884C\u4E3B\u5E8F\u3001\u5217\u6709\u5E8F\uFF0C\u53EF\u80FD\u4EA7\u751F\u66F4\u591A\u5F00\u9500</li></ul><p>\u5341\u5B57\u94FE\u8868\u662F\u7A00\u758F\u77E9\u9635\u7684\u53E6\u4E00\u79CD\u5B58\u50A8\u7B56\u7565</p><ul><li>\u6BCF\u4E2A\u975E\u96F6\u5143\u4E3A\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u6BCF\u4E2A\u7ED3\u70B9\u542B\u4E94\u4E2A\u57DF\u3002 <ul><li>\u5176\u4E2D\uFF0C\u884C\u57DFi\u3001\u5217\u57DFj\u3001\u503C\u57DFv\u5206\u522B\u8868\u793A\u975E\u96F6\u5143\u7D20\u7684\u884C\u4E0B\u6807\u3001\u5217\u4E0B\u6807\u548C\u503C\u3002</li><li>\u5411\u53F3\u57DFright\u94FE\u63A5\u540C\u4E00\u884C\u4E2D\u4E0B\u4E00\u4E2A\u975E\u96F6\u5143\u7D20\u3002</li><li>\u5411\u4E0B\u57DFdown\u94FE\u63A5\u540C\u4E00\u5217\u4E2D\u4E0B\u4E00\u4E2A\u975E\u96F6\u5143\u7D20\u3002</li></ul></li><li>\u5341\u5B57\u94FE\u8868\u5B58\u50A8\u9700\u8981\u989D\u5916\u7684\u6307\u9488\u57DF\u3001\u884C\u3001\u5217\u6307\u9488 <ul><li>\u4E00\u822C\u7684\uFF0C\u5F53\u975E\u96F6\u5143\u7684\u6570\u4E0D\u8D85\u8FC7\u603B\u5143\u7D20\u4E2A\u6570\u768420%\uFF0C\u9002\u7528\u5341\u5B57\u94FE\u8868\u5B58\u50A8\u3002</li></ul></li></ul><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20210607224435397.png" alt="image-20210607224435397" style="zoom:50%;"><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20210607224502534.png" alt="image-20210607224502534" style="zoom:67%;">`,39);function x(_,v,j,L,T,q){const t=e("Comment");return c(),o("div",null,[i,r,k,m,d,h,y,b,g,f,z,w,l(t)])}var V=p(u,[["render",x]]);export{N as __pageData,V as default};
