import{_ as n,c as s,o as a,b as p}from"./app.bc4d709e.js";const m='{"title":"\u8D2A\u5FC3\u7B97\u6CD5","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6982\u8FF0","slug":"\u6982\u8FF0"},{"level":2,"title":"Prim","slug":"prim"},{"level":2,"title":"Kruskal","slug":"kruskal"},{"level":3,"title":"Dijkstra","slug":"dijkstra"}],"relativePath":"\u77E5\u8BC6\u5E93/\u7B97\u6CD5\u4E0E\u6570\u636E\u7ED3\u6784/13\u8D2A\u5FC3\u7B97\u6CD5.md","lastUpdated":1643892552289}',e={},t=p(`<h1 id="\u8D2A\u5FC3\u7B97\u6CD5" tabindex="-1">\u8D2A\u5FC3\u7B97\u6CD5 <a class="header-anchor" href="#\u8D2A\u5FC3\u7B97\u6CD5" aria-hidden="true">#</a></h1><h2 id="\u6982\u8FF0" tabindex="-1">\u6982\u8FF0 <a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a></h2><blockquote><p>\u8D2A\u5FC3\u7B97\u6CD5\u6BCF\u6B65\u90FD\u91C7\u53D6\u5F53\u524D\u6700\u4F18\uFF08\u5C40\u90E8\u6700\u4F18\uFF09\uFF0C\u6700\u7EC8\u5F97\u5230\u4E00\u4E2A\u5168\u5C40\u6700\u4F18\u7684\u65B9\u6848\uFF1B</p></blockquote><p><strong>\u6559\u5BA4\u8C03\u5EA6\u95EE\u9898\uFF1A</strong><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20211105153441437.png" alt="image-20211105153441437" style="zoom:80%;"></p><p>\u6CE8\uFF1A</p><ul><li>\u4E0A\u8FF0\u4E2D\u9009\u62E9\u6700\u65E9\u7ED3\u675F\u7684\u8BFE\u7A0B\u7684\u7B56\u7565\u53EF\u4EE5\u627E\u5230\u6559\u5BA4\u8C03\u5EA6\u95EE\u9898\u6700\u4F18\u89E3\uFF1B</li><li>\u9009\u62E9\u6700\u5C0F\u5360\u7528\u65F6\u95F4\u7684\u8BFE\u7A0B\u5F97\u4E0D\u5230\u6700\u4F18\u89E3\uFF1B</li><li>\u9009\u62E9\u6700\u65E9\u5F00\u59CB\u7684\u8BFE\u7A0B\u5F97\u4E0D\u5230\u6700\u4F18\u89E3\uFF1B</li><li>\u8D2A\u5FC3\u7B97\u6CD5\u4E0D\u662F\u4EFB\u4F55\u60C5\u51B5\u4E0B\u90FD\u6709\u6548\uFF0C\u4F46\u5BB9\u6613\u5B9E\u73B0\uFF1B</li></ul><h2 id="prim" tabindex="-1">Prim <a class="header-anchor" href="#prim" aria-hidden="true">#</a></h2><blockquote><p>\u57FA\u672C\u6982\u5FF5\uFF1A\u751F\u6210\u6811\u3001\u6700\u5C0F\u751F\u6210\u6811</p><p>\u7B97\u6CD5\u6838\u5FC3\uFF1A\u4ECE\u8FDE\u901A$$V_T$$\u548C$$V-V_T$$\u7684\u8FB9\u4E2D\u6311\u9009\u4E00\u6761\u6743\u91CD\u6700\u5C0F\u7684\u8FB9\u3002</p></blockquote><ul><li>\u4EFB\u610F\u9009\u4E00\u70B9$$v_0$$\uFF0C\u96C6\u5408V\u88AB\u5206\u5272\u6210\u4E24\u4E2A\u96C6\u5408$$V_T={v_0}$$\u548C$$V-V_T$$\uFF1B</li><li>\u4ECE\u8FDE\u901A$$V_T$$\u548C$$V-V_T$$\u7684\u8FB9\u4E2D\u6311\u9009\u4E00\u6761\u6743\u91CD\u6700\u5C0F\u7684\u8FB9$$e^<em>=(v^</em>,u^<em>),v^</em> \\in V_T,u^* \\in V-V_T$$\uFF0C\u5C06$$u^<em>$$\u52A0\u5165$$V_T$$\u4E2D\uFF0C\u4ECE$$V - V_T$$\u5220\u9664$$u^</em>$$;</li><li>\u91CD\u590D\u6B65\u9AA42\uFF0C\u76F4\u5230\u96C6\u5408$$V-V_T$$\u4E3A\u7A7A\uFF1B</li></ul><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20211105160655381.png" alt="image-20211105160655381" style="zoom:67%;"><div class="language-python line-numbers-mode"><pre><code><span class="token keyword">def</span> <span class="token function">cmp</span><span class="token punctuation">(</span>key1<span class="token punctuation">,</span> key2<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>key1<span class="token punctuation">,</span> key2<span class="token punctuation">)</span> <span class="token keyword">if</span> key1 <span class="token operator">&lt;</span> key2 <span class="token keyword">else</span> <span class="token punctuation">(</span>key2<span class="token punctuation">,</span> key1<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">prim</span><span class="token punctuation">(</span>graph<span class="token punctuation">,</span> init_node<span class="token punctuation">)</span><span class="token punctuation">:</span>
    visited <span class="token operator">=</span> <span class="token punctuation">{</span>init_node<span class="token punctuation">}</span>
    candidate <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>graph<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    candidate<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>init_node<span class="token punctuation">)</span>  <span class="token comment"># \u6DFB\u52A0\u6240\u6709\u9664\u5F00\u59CB\u5B9A\u70B9\u7684\u5176\u4ED6\u9876\u70B9</span>
    tree <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>candidate<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        edge_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> node <span class="token keyword">in</span> visited<span class="token punctuation">:</span>  <span class="token comment"># \u627E\u5230\u6240\u6709\u5DF2\u8BBF\u95EE\u7684\u8282\u70B9</span>
            <span class="token keyword">for</span> connected_node<span class="token punctuation">,</span> weight <span class="token keyword">in</span> graph<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># \u62FF\u5230\u4E0E\u8BE5\u8282\u70B9\u76F8\u8FDE\u7684\u8282\u70B9</span>
                <span class="token keyword">if</span> connected_node <span class="token keyword">in</span> candidate<span class="token punctuation">:</span>  <span class="token comment"># \u6CA1\u8BBF\u95EE\u8FC7\u5C31\u52A0\u5165\u5F85\u9009\u96C6</span>
                    edge_dict<span class="token punctuation">[</span><span class="token builtin">cmp</span><span class="token punctuation">(</span>connected_node<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> weight
        edge<span class="token punctuation">,</span> cost <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>edge_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> kv<span class="token punctuation">:</span> kv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># \u4ECE\u5F85\u9009\u96C6\u627E\u5230\u6700\u5C0F\u7684\u6743\u91CD\u8DEF\u5F84</span>
        tree<span class="token punctuation">.</span>append<span class="token punctuation">(</span>edge<span class="token punctuation">)</span>
        visited<span class="token punctuation">.</span>add<span class="token punctuation">(</span>edge<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># \u628A\u9009\u4E2D\u7684\u52A0\u5165\u5DF2\u8BBF\u95EE\u96C6\u5408</span>
        visited<span class="token punctuation">.</span>add<span class="token punctuation">(</span>edge<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        candidate<span class="token punctuation">.</span>discard<span class="token punctuation">(</span>edge<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># \u628A\u9009\u4E2D\u7684\u79FB\u9664\u5DF2\u8BBF\u95EE\u96C6\u5408</span>
        candidate<span class="token punctuation">.</span>discard<span class="token punctuation">(</span>edge<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> tree
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="kruskal" tabindex="-1">Kruskal <a class="header-anchor" href="#kruskal" aria-hidden="true">#</a></h2><blockquote><p>\u7B97\u6CD5\u8D2A\u5A6A\u5730\u9009\u62E9\u6700\u5C0F\u6743\u91CD\u7684\u8FB9\uFF0C\u6269\u5C55\u65E0\u73AF\u7684\u5B50\u56FE\u6784\u9020\u6700\u5C0F\u751F\u6210\u6811\u3002</p></blockquote><ul><li>\u6309\u7167\u6743\u91CD\u975E\u9012\u51CF\u987A\u5E8F\u5BF9\u9014\u4E2D\u7684\u8FB9E\u8FDB\u884C\u6392\u5E8F\uFF1B</li><li>\u70E7\u82D7\u5DF2\u6392\u5E8F\u7684\u5217\u8868\uFF0C\u5982\u679C\u4E0B\u4E00\u6761\u8FB9\u52A0\u5165\u5F53\u524D\u7684\u5B50\u56FE\u4E2D\u4E0D\u5BFC\u81F4\u4E00\u4E2A\u56DE\u8DEF\uFF0C\u5219\u52A0\u5165\u8BE5\u8FB9\u5230\u5B50\u56FE\u4E2D\uFF0C\u5426\u5219\u8DF3\u8FC7\u8BE5\u8FB9\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA42\uFF0C\u76F4\u5230\u5B50\u56FE\u4E2D\u6709$$|V|-1$$\u6761\u8FB9\uFF1B</li></ul><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20211105161446850.png" alt="image-20211105161446850" style="zoom:67%;"><div class="language-python line-numbers-mode"><pre><code><span class="token keyword">def</span> <span class="token function">cmp</span><span class="token punctuation">(</span>key1<span class="token punctuation">,</span> key2<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>key1<span class="token punctuation">,</span> key2<span class="token punctuation">)</span> <span class="token keyword">if</span> key1 <span class="token operator">&lt;</span> key2 <span class="token keyword">else</span> <span class="token punctuation">(</span>key2<span class="token punctuation">,</span> key1<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">find_parent</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> record<span class="token punctuation">[</span>node<span class="token punctuation">]</span> <span class="token operator">!=</span> node<span class="token punctuation">:</span>
        record<span class="token punctuation">[</span>node<span class="token punctuation">]</span> <span class="token operator">=</span> find_parent<span class="token punctuation">(</span>record<span class="token punctuation">,</span> record<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> record<span class="token punctuation">[</span>node<span class="token punctuation">]</span>


<span class="token keyword">def</span> <span class="token function">naive_union</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> edge<span class="token punctuation">)</span><span class="token punctuation">:</span>
    u<span class="token punctuation">,</span> v <span class="token operator">=</span> find_parent<span class="token punctuation">(</span>record<span class="token punctuation">,</span> edge<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> find_parent<span class="token punctuation">(</span>record<span class="token punctuation">,</span> edge<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    record<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> v


<span class="token keyword">def</span> <span class="token function">kruskal</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">:</span>
    edge_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> node <span class="token keyword">in</span> graph<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># cmp\u628A\u5B57\u6BCD\u7684\u987A\u5E8F\u4EA4\u6362\uFF0Cupdate\u53BB\u9664\u76F8\u540C\u7684\u952E\u4ECE\u800C\u53BB\u91CD</span>
        edge_dict<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token builtin">cmp</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">:</span> v <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> graph<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>   
    <span class="token comment"># \u6309\u6743\u91CD\u6392\u5E8F\u7684\u8FB9\u96C6\u5408</span>
    sorted_edge <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>edge_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> kv<span class="token punctuation">:</span> kv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  
    tree <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    connected_records <span class="token operator">=</span> <span class="token punctuation">{</span>key<span class="token punctuation">:</span> key <span class="token keyword">for</span> key <span class="token keyword">in</span> graph<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    
    <span class="token keyword">for</span> edge_pair<span class="token punctuation">,</span> _ <span class="token keyword">in</span> sorted_edge<span class="token punctuation">:</span>
        <span class="token keyword">if</span> find_parent<span class="token punctuation">(</span>connected_records<span class="token punctuation">,</span> edge_pair<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> \\
                find_parent<span class="token punctuation">(</span>connected_records<span class="token punctuation">,</span> edge_pair<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            tree<span class="token punctuation">.</span>append<span class="token punctuation">(</span>edge_pair<span class="token punctuation">)</span>
            naive_union<span class="token punctuation">(</span>connected_records<span class="token punctuation">,</span> edge_pair<span class="token punctuation">)</span>

    <span class="token keyword">return</span> tree
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h4 id="\u96BE\u70B9\uFF1A\u5224\u65AD\u65B0\u52A0\u5165\u7684\u8FB9\u662F\u5426\u6784\u6210\u56DE\u8DEF" tabindex="-1"><strong>\u96BE\u70B9\uFF1A\u5224\u65AD\u65B0\u52A0\u5165\u7684\u8FB9\u662F\u5426\u6784\u6210\u56DE\u8DEF</strong> <a class="header-anchor" href="#\u96BE\u70B9\uFF1A\u5224\u65AD\u65B0\u52A0\u5165\u7684\u8FB9\u662F\u5426\u6784\u6210\u56DE\u8DEF" aria-hidden="true">#</a></h4><blockquote><p>\u5E76\u67E5\u96C6\u7684\u601D\u60F3</p></blockquote><h5 id="\u57FA\u672C" tabindex="-1">\u57FA\u672C <a class="header-anchor" href="#\u57FA\u672C" aria-hidden="true">#</a></h5><ul><li>connected_records\uFF1A\u751F\u6210\u4E00\u4E2A\u5355\u5143\u7D20\u96C6\u5408\uFF1B</li><li>find_parent(x)\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u5305\u542Bx\u7684\u5B50\u96C6\uFF1B</li><li>union(x, y)\uFF1A\u6784\u9020\u5206\u522B\u5305\u542Bx\u548Cy\u7684\u4E0D\u76F8\u4EA4\u5B50\u96C6\u7684\u5E76\u96C6\uFF1B</li></ul><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20211105165537770.png" alt="image-20211105165537770" style="zoom:67%;"><h5 id="\u8981\u70B9" tabindex="-1">\u8981\u70B9 <a class="header-anchor" href="#\u8981\u70B9" aria-hidden="true">#</a></h5><ul><li>\u6309\u7167\u6743\u91CD$$w(e_1) \\leq ... \\leq w(e_{|E|})$$\u7684\u975E\u9012\u589E\u987A\u5E8F\u5BF9\u96C6\u5408E\u6392\u5E8F\uFF1B</li><li>\u5224\u65AD$$find(a)$$\u662F\u5426\u7B49\u4E8E$$find(b)$$\uFF0C\u5982\u679C\u4E0D\u76F8\u7B49\uFF0Cunion(a,b);</li></ul><h5 id="\u7B97\u6CD5\u6548\u7387\u5206\u6790" tabindex="-1">\u7B97\u6CD5\u6548\u7387\u5206\u6790 <a class="header-anchor" href="#\u7B97\u6CD5\u6548\u7387\u5206\u6790" aria-hidden="true">#</a></h5><ul><li>\u7B2C\u4E00\u6B65\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A$$O(|E|log|E|)$$\uFF08\u5FEB\u901F\u6392\u5E8F\uFF09;</li><li>\u7B2C\u4E8C\u6B65$$find(x)$$\u548C$$union(a, b)$$\u7684\u590D\u6742\u5EA6\u53D6\u51B3\u4E8E\u5B9E\u73B0\u65B9\u5F0F\uFF1B</li><li>\u5FEB\u901F\u67E5\u627E\uFF1A$$T(find) \\in O(1),T(union) \\in O(nlogn)$$\uFF08\u6240\u6709\u5408\u5E76\uFF09;</li><li>\u5FEB\u901F\u6C42\u5E76\uFF1A$$T(find) \\in O(logn),T(union) \\in O(1)$$\uFF1B</li><li>\u5FEB\u901F\u67E5\u627E\u4E0B\u603B\u7684\u6548\u7387\u4E3A$$O(|E|log|E|)+O(m+|V|log|V|)$$\uFF1B</li><li>\u5FEB\u901F\u6C42\u5E76\u4E0B\u603B\u7684\u6548\u7387\u4E3A$$O(|E|log|E| + O(mlog|V|+|V|))$$\uFF1B</li></ul><h3 id="dijkstra" tabindex="-1">Dijkstra <a class="header-anchor" href="#dijkstra" aria-hidden="true">#</a></h3><blockquote><p>\u548CPrim\u7C7B\u4F3C\uFF0C\u4E0D\u8FC7\u9009\u62E9\u4E0B\u4E00\u6761\u8DEF\u5F84\u65F6\u5E76\u4E0D\u662F\u5224\u65AD\u7684\u662F\u5F53\u524D\u6743\u91CD\uFF0C\u800C\u662F\u6574\u6761\u8DEF\u5F84\u7684\u6743\u91CD\u4F5C\u6BD4\u8F83</p></blockquote><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20211105184049950-16361088515014.png" alt="image-20211105184049950" style="zoom:67%;"><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20211105184137407.png" alt="image-20211105184137407" style="zoom:80%;"><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20211105184146102.png" alt="image-20211105184146102" style="zoom:80%;"><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20211105184157535.png" alt="image-20211105184157535" style="zoom:80%;"><img src="https://webplus-cn-shenzhen-s-6130b804f968dd14cecc43e2.oss-cn-shenzhen.aliyuncs.com/blogs/image-20211105184205959.png" alt="image-20211105184205959" style="zoom:80%;">`,32),o=[t];function c(l,u,i,r,k,d){return a(),s("div",null,o)}var h=n(e,[["render",c]]);export{m as __pageData,h as default};
